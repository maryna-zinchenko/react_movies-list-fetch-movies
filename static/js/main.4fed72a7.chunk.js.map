{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","request","fetch","then","response","ok","json","Error","status","statusText","FindMovie","onAdd","useState","setMovie","setTitle","error","setError","getMovie","query","a","movieFromServer","Response","Title","Description","imdbID","Poster","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","id","placeholder","classNames","onClick","App","data","setMovies","some","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fed72a7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.defaultProps = {\n  description: 'no description',\n  imdbUrl: '',\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=dd1635ad&';\n\nexport const request = title => fetch(`${BASE_URL}t=${title}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\n      `${response.status} ${response.statusText}`,\n    );\n  });\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [movie, setMovie] = useState();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    onAdd(movie);\n    setTitle('');\n    setMovie(null);\n  };\n\n  const getMovie = async(query) => {\n    const movieFromServer = await request(query);\n\n    if (movieFromServer.Response === 'False') {\n      setMovie(null);\n      setError(true);\n\n      return;\n    }\n\n    setMovie({\n      title: movieFromServer.Title,\n      description: movieFromServer.Description,\n      imdbUrl: movieFromServer.imdbUrl,\n      imdbId: movieFromServer.imdbID,\n      imgUrl: movieFromServer.Poster,\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={handleChange}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={() => getMovie(title)}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    if (!movie) {\n      return;\n    }\n\n    const duplicate = movies\n      .some(film => film.imdbId === movie.imdbId);\n\n    if (!duplicate) {\n      setMovies(prevMovies => ([\n        ...prevMovies,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}